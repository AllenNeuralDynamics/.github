name: Build and Create exe Release

on:
  workflow_call:
    inputs: 
      runner_label: 
        description: 'Runner to use'
        type: string
        default: 'eng-tools'

env: 
  ZIP_NAME: '' # if not set, it will be extracted from setup.py or pyproject.toml

jobs:
  build: 
    runs-on: ${{ inputs.runner_label }}
    outputs:
      project-name: ${{ needs.extract-info.outputs.project-name }}
      project-version: ${{ needs.extract-info.outputs.project-version }}
    env: 
      UV_PYTHON_INSTALL_DIR: C:\ProgramData\AIBS_MPE\uv_python
      UV_TOOL_DIR: C:\ProgramData\AIBS_MPE\uv_python
    steps:
      - name: Run extract_info only if PROJECT_NAME is not set
        # TODO: update to main after testing...
        uses: AllenNeuralDynamics/.github/.github/actions/extract_info@dev
        id: extract_info
        if: env.ZIP_NAME == ''
      - name: Set PROJECT_NAME from extract_info (if not already set)
        id: set_project_name
        run: |
          echo "PROJECT_NAME=${PROJECT_NAME:-${{ steps.extract_info.outputs.project-name }}}" >> "$GITHUB_ENV"
        env:
          PROJECT_NAME: ${{ env.PROJECT_NAME }}

      - name: Install UV 
        uses: astral-sh/setup-uv@v5
      - name: Sync dependencies
        run: uv sync
      - name: Install pyinstaller
        run: uv add pyinstaller
      - name: Build Project with PyInstaller
        run: uv pyinstaller --name ${{ env.PROJECT_NAME }} src/jessy-test/main.py # replace this with the path to your script

      - name: Create zip on Windows
        if: runner.os == 'Windows'
        shell: powershell
        run: Compress-Archive -Path dist/* -DestinationPath "${{ needs.extract-info.outputs.project-name }}.zip"
      - name: Create zip on Linux/macOS
        if: runner.os != 'Windows'
        run: zip -r "${{ needs.extract-info.outputs.project-name }}.zip" dist/