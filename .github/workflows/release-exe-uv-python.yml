name: Create Github/eng-tools release

on:
  workflow_call:
    inputs: 
      files: 
        required: true
        description: 'List of files/directories to upload to release'
        type: string
      runner-label: 
        description: 'Runner to use'
        type: string
        default: 'eng-tools'
      project-name: 
        description: 'Project name (used to make eng-tools/release directory)'
        type: string
      project-version: 
        description: 'Project version (used to make eng-tools/release subdirectory)'
        type: string
      tag-name: 
        description: 'Tag to upload files to (defaults to latest)'
        type: string
env: 
  PROJECT_NAME: ${{ inputs.project-name }}
  PROJECT_VERSION: ${{ inputs.project-version }}
  TAG_NAME: ${{ inputs.tag-name }}
jobs:
  ################################################################################
  #
  #   Get default values from pyproject.toml
  #
  ################################################################################
  extract_info:
    runs-on: input.
    steps: 
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Run extract_info only if PROJECT_NAME is not set
        # TODO: update to main after testing...
        uses: AllenNeuralDynamics/.github/.github/actions/extract_info@dev
        id: extract_info
        if: env.PROJECT_NAME == '' || env.PROJECT_VERSION == '' || env.TAG_NAME == ''
      - name: Set PROJECT_NAME from extract_info (if not already set)
        id: set_project_name
        shell: bash
        run: |
          PROJECT_NAME="${PROJECT_NAME:-${{ steps.extract_info.outputs.project-name }}}"
          echo "PROJECT_NAME=$PROJECT_NAME" >> "$GITHUB_ENV"
      - name: Set PROJECT_VERSION from extract_info (if not already set)
        id: set_project_version
        shell: bash
        run: |
          PROJECT_VERSION="${PROJECT_VERSION:-${{ steps.extract_info.outputs.project-version }}}"
          echo "PROJECT_VERSION=$PROJECT_VERSION" >> "$GITHUB_ENV"
      - name: Set TAG_NAME from extract_info (if not already set)
        id: set_tag_name
        shell: bash
        run: |
          TAG_NAME="v${TAG_NAME:-${{ steps.extract_info.outputs.project-version }}}"
          echo "TAG_NAME=$TAG_NAME" >> "$GITHUB_ENV"

  ################################################################################
  #
  #   Release to Github Releases
  #
  ################################################################################
  publish: 
    runs-on: ${{ inputs.runner-label }}
    needs: extract_info
    steps: 
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ inputs.files }}
          tag_name: ${{ env.TAG_NAME }} 
          body: "Automated release of ${{ env.PROJECT_NAME }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  ################################################################################
  #
  #   Release to eng-tools/release
  #   Go to http://eng-tools/gh-pull-agent/docs for more information on API
  #
  ################################################################################
  call-api:
    runs-on: ${{ inputs.runner-label }}
    needs: publish
    steps: 
      - name: Trigger gh-pull-agent to pull latest release from this repo to eng-tools
        shell: bash
        run: |
          project_name = '${{ env.PROJECT_NAME }}'
          project_version = '${{ env.PROJECT_VERSION }}'
          owner_name = '"${{ github.repository_owner }}"'
          repo_name = '"${{ github.event.repository.name }}"'
          $json = @{
            '"owner_name"' = $owner_name
            '"repo_name"' = $repo_name
          } | ConvertTo-Json -Compress
          & curl.exe -X PUT "http://eng-tools/gh-pull-agent/api/v1beta/releases/$project_name/$project_version" `
            -H "accept: application/json" `
            -H "Content-Type: application/json" `
            -d $json